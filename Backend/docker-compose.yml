version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    ports:
     - "8001:443"
     - "8000:80"
    networks:
     - backend

  usersservice.api:
    image: ${DOCKER_REGISTRY-}usersserviceapi
    build:
      context: .
      dockerfile: Microservices/UsersService/UsersService.API/Dockerfile
    volumes:
      - ./gymly_cert.pem:/etc/ssl/certs/server-certificate.pem 
    networks:
      - backend
    extra_hosts:
      - "192.168.137.1:192.168.137.1"
    depends_on:
      - rabbitmq

  otherservice.api:
    image: ${DOCKER_REGISTRY-}otherserviceapi
    build:
      context: .
      dockerfile: Microservices/OtherService/OtherService.API/Dockerfile
    networks:
      - backend
    depends_on:
      - rabbitmq

  authservice.api:
    image: ${DOCKER_REGISTRY-}authserviceapi
    build:
      context: .
      dockerfile: Microservices/AuthService/AuthService.API/Dockerfile
    networks:
      - backend
    depends_on:
      - rabbitmq

  postservice.api:
    image: ${DOCKER_REGISTRY-}postserviceapi
    build:
      context: .
      dockerfile: Microservices/PostService/PostService.API/Dockerfile
    volumes:
      - ./gymly_cert.pem:/etc/ssl/certs/server-certificate.pem 
    networks:
      - backend
    extra_hosts:
      - "192.168.137.1:192.168.137.1"
    depends_on:
      - rabbitmq

  resourceservice.api:
    image: ${DOCKER_REGISTRY-}resourceserviceapi
    build:
      context: .
      dockerfile: Microservices/ResourceService/ResourceService.API/Dockerfile
    volumes:
      - ./gymly_cert.pem:/etc/ssl/certs/server-certificate.pem 
    networks:
      - backend
    extra_hosts:
      - "192.168.137.1:192.168.137.1"
    depends_on:
      - rabbitmq

  chatservice.api:
    image: ${DOCKER_REGISTRY-}chatserviceapi
    build:
      context: .
      dockerfile: Microservices/ChatService/ChatService.API/Dockerfile
    volumes:
      - ./gymly_cert.pem:/etc/ssl/certs/server-certificate.pem 
    networks:
      - backend
    extra_hosts:
      - "192.168.137.1:192.168.137.1"
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=admin
    networks:
        - backend

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped

  mongodb:
    image: mongo:4.2.3-bionic
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=gymly
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - backend

networks: 
  backend:
    driver: bridge


volumes:
  pgadmin:
  postgres:
  mongodb:
  mongoconfig:





